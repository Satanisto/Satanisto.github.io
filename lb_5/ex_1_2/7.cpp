#include <iostream>
#include <cstring> 
#include <vector> 
#include <iomanip>
#include <windows.h>
#include <ctime>
using namespace std;
char country[10][10] = {"Ukrain", "Russia", "USA", "Russia", "Ukrain", "Ukrain", "Russia", "USA", "Ukrain", "Russia"};
char firm[10][10] = {"Iti", "DrYgiy", "Iakist", "Neyman", "Vafli", "Pusir", "Ruslo", "Lopital", "Microsoft", "Meshkov"};
char vestovar[10][10] = {"Komp", "Piki", "Tochilki", "Stooliya", "Telek", "Monitor", "Komp", "Knife", "Knigi", "Komp"};
 // ×€Â½×€Â°×ÿË† ×ÿÂ¿Â½×ÿÂ¿Â½×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â¾×€Ã· ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼ , ×€Â° ×€Â²×€Â²×€Âµ×ÿâ‚¬×ÿâ€¦×ÿÆ’ ×€Â½×€Â°×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â¾×€Ã· ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×ÿâ€¦ ×€Â¸×€Â¼×ÿâ€˜×€Â½ ×€Â¿×€Â¾×ÿâ€ÿ×€Â¾×€Â¼×ÿÆ’ ×ÿâ€¡×ÿâ€ÿ×€Â¾ ×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â¿×€Â¾×€Â´×€Â·×€Â°×€Âµ×€Â±×€Â°×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×€Ã·×€Â°×€Â¶×€Â´×ÿâ€¹×€Â¹ ×ÿâ‚¬×€Â°×€Â· ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â¾ ×€Â²×€Â±×€Â¸×€Â²×€Â°×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ‚¬×ÿÆ’×ÿâ€¡×ÿâ€˜×€Â½×€Ã·×€Â°×€Â¼×€Â¸

struct Tov // ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×ÿÆ’×€Ã·×ÿâ‚¬×ÿÆ’×ÿâ‚¬×€Â° ×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â½×€Â°×€Â·×€Â²×€Â°×€Â½×€Â¸×€Âµ×€Â¼ ×€Â¢×€Â¾×€Â²(×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬)
{
	char name[12]; //×€Â¸×€Â¼×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×€Â°
	char phyrm[12]; //×€Â½×€Â°×€Â·×€Â²×€Â°×€Â½×€Â¸×€Âµ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×ÿâ€¹
	char count[12]; // ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Â°×€Â½×€Â°
	int value; // ×ÿâ€ ×€Âµ×€Â½×€Â° ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×€Â°
	int kolvo; // ×€Ã·×€Â¾×€Â»×€Â¸×ÿâ€¡×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â²×€Â¾
	int year; // ×€Â³×€Â¾×€Â´
	int month; // ×€Â¼×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ 
	int day; // ×€Â´×€Âµ×€Â½×ÿÂ¿Â½×ÿÂ¿Â½
};

void z10(Tov *str, const int n)
{
	cout << "Firma kotra v 2013 year iz Ukrain dostavila kompu :\n" ;
	int i;
	for(i = 0; i < n; i++)
		if(str[i].year == 2013 && !strcmp(str[i].count, "Ukrain") && !strcmp(str[i].name, "Komp"))
		{
			cout << str[i].phyrm << endl;
			break;
		}
}

void z9(Tov *str, const int n)
{
	const int q = 10;
	int i, j;
	vector<int> a(q); //×ÿÂ¿Â½×ÿÂ¿Â½×€Â¾×€Â·×€Â´×€Â°×ÿâ€˜×€Â¼ ×€Â²×€Âµ×€Ã·×ÿâ€ÿ×€Â¾×ÿâ‚¬ (×€Ã·×€Â°×€Ã· ×€Â¼×€Â°×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â² ×ÿâ€ÿ×€Â¾×€Ã· ×€Â»×ÿÆ’×ÿâ€¡×ÿË†×€Âµ )
	for(j = 0; j < q; j++)
		for(i = 0; i < n; i++)
			if(!strcmp(str[i].phyrm, firm[j]))
				a[j] += str[i].kolvo;
	j = 0;
	for(i = 0; i < q; i++)
		if(a[i] > j)
			j = a[i];

	for(i = 0; i < q; i++)
		if(a[i] == j)
			cout << "Firma s max kolvom tovarov :\n" << firm[i] << endl;

}

void z8(Tov *str, const int n) // ×ÿâ€ÿ×ÿÆ’×ÿâ€ÿ ×€Â¿×ÿâ‚¬×€Â¾×€Â±×€Â»×€Âµ×€Â¼×€Â° , ×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â¿×ÿâ‚¬×€Â°×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Âµ, ×€Â¼×€Â½×€Âµ ×€Â² ×€Â³×€Â¾×€Â»×€Â¾×€Â²×ÿÆ’ ×€Â½×€Â¸×ÿâ€¡×€Âµ×€Â³×€Â¾ ×€Â´×ÿâ‚¬×ÿÆ’×€Â³×€Â¾×€Â³×€Â¾ ×€Â½×€Âµ ×€Â¿×ÿâ‚¬×€Â¸×ÿË†×€Â»×€Â¾ ×€Ã·×ÿâ‚¬×€Â¾×€Â¼×€Âµ ×€Ã·×€Â°×€Ã· ×ÿâ€ÿ×ÿÆ’×€Â¿×€Â¾ ×€Â½×€Â°×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â°×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â¾ ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€˜ ×ÿâ‚¬×ÿÆ’×ÿâ€¡×€Ã·×€Â°×€Â¼×€Â¸
{
	const int q = 10;
	int i, j;
	vector<int> a(q);//×ÿÂ¿Â½×ÿÂ¿Â½×€Â¾×€Â·×€Â´×€Â°×ÿâ€˜×€Â¼ ×€Â²×€Âµ×€Ã·×ÿâ€ÿ×€Â¾×ÿâ‚¬ (×€Ã·×€Â°×€Ã· ×€Â¼×€Â°×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â² ×ÿâ€ÿ×€Â¾×€Ã· ×€Â»×ÿÆ’×ÿâ€¡×ÿË†×€Âµ )
	for(j = 0; j < q; j++)
		for(i = 0; i < n; i++)
			if(str[i].year == 2013)
				if(!strcmp(str[i].phyrm, firm[j]))
					a[j] += str[i].value * str[i].kolvo;
	j = 0;
	for(i = 0; i < q; i++)
		if(a[i] > j)
			j = a[i];

	for(i = 0; i < q; i++)
		if(a[i] == j)
			cout << "Firma s max kolvom summi value tovarov za 2013 year :\n" << firm[i] << endl;
}

void z7(Tov *str, const int n)
{
	int i, sum = 0;

	for(i = 0; i < n; i++)
		if(str[i].year == 2013 && !strcmp(str[i].count, "USA")) //×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¸ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬ ×€Â·×€Â° 2013 ×€Â³×€Â¾×€Â´ ×€Â¸ ×€Â¾×ÿâ€ÿ ×ÿÂ¿Â½×ÿÂ¿Â½×ÿË†×€Â°, ×ÿâ€ÿ×€Â¾ ×€Â¿×ÿâ‚¬×€Â¸×€Â±×€Â¾×€Â²×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â¼ ×ÿâ€ ×€Âµ×€Â½×ÿÆ’ ×€Â·×€Â° ×€Âµ×€Â³×€Â¾ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×ÿâ€¹
			sum += (str[i].value * str[i].kolvo);
	cout << "Summa vartosti tovarov za 2013 year USA :\n" << sum << " ruskih dollarov" << endl;
	sum = 0;
	for(i = 0; i < n; i++)
		if(str[i].year == 2013 && !strcmp(str[i].count, "Ukrain")) //×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¸ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬ ×€Â·×€Â° 2013 ×€Â³×€Â¾×€Â´ ×€Â¸ ×€Â¾×ÿâ€ÿ ×ÿÆ’×€Ã·×ÿâ‚¬×€Â°×€Â¸×€Â½×ÿâ€¹, ×ÿâ€ÿ×€Â¾ ×€Â¿×ÿâ‚¬×€Â¸×€Â±×€Â¾×€Â²×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â¼ ×ÿâ€ ×€Âµ×€Â½×ÿÆ’ ×€Â·×€Â° ×€Âµ×€Â³×€Â¾ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×ÿâ€¹
			sum += (str[i].value * str[i].kolvo);
	cout << "Summa vartosti tovarov za 2013 year Ukrain :\n" << sum << " ruskih dollarov" << endl;
	sum = 0;
	for(i = 0; i < n; i++)
		if(str[i].year == 2013 && !strcmp(str[i].count, "Russia")) //×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¸ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬ ×€Â·×€Â° 2013 ×€Â³×€Â¾×€Â´ ×€Â¸ ×€Â¾×ÿâ€ÿ ×ÿâ‚¬×€Â°×ÿË†×€Ã·×€Â¸, ×ÿâ€ÿ×€Â¾ ×€Â¿×ÿâ‚¬×€Â¸×€Â±×€Â¾×€Â²×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â¼ ×ÿâ€ ×€Âµ×€Â½×ÿÆ’ ×€Â·×€Â° ×€Âµ×€Â³×€Â¾ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×ÿâ€¹
			sum += (str[i].value * str[i].kolvo);
	cout << "Summa vartosti tovarov za 2013 year Russia :\n" << sum << " ruskih dollarov" << endl;
}

void z6(Tov *str, const int n)
{
	int i;
	cout << "Phirma kotoraya postovliaet monitoru in mart into 2013 year och diochivo :\n";
	for(i = 0; i < n; i++)
		if(!strcmp(str[i].name, "Monitor") && str[i].value < 1500 && str[i].month == 3 && str[i].year == 2013)
			cout << str[i].phyrm << endl;
}

void z5(Tov *str, const int n)
{
	int i, j, b = 0, a[1000], max = 0;
	char c[1000][10];
	for(i = 0; i < n; i++)
		if(str[i].year == 2013 || str[i].year == 2012 || str[i].year == 2011)
			for(j = 0; j < n; j++)
				strcpy(c[j], str[i].count);

	for(i = 0; i < n; i++) //×€Â·×€Â°×€Â¿×ÿÆ’×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â°×€Âµ×€Â¼ ×ÿâ€ ×€Â¸×€Ã·×€Â» 
	{//×€Â½×€Â°×ÿâ€¦×€Â¾×€Â´×€Â¸×€Â¼ ×€Ã·×€Â°×€Ã·×€Â°×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Â°×€Â½×€Â° ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Âµ×ÿâ€¡×€Â°×€Âµ×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€¡×€Â°×ÿâ€°×€Âµ ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â³×€Â¾
		for(j = 0; j < n; j++)
			if(c[i] == c[j])
				b++;
		a[i] = b; // ×€Â·×€Â°×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€¹×€Â²×€Â°×€Âµ×€Â¼ ×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â¾×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â¾ ×ÿâ‚¬×€Â°×€Â· ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Âµ×ÿâ€¡×€Â°×€Âµ×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×€Ã·×€Â°×€Ã·×€Â°×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×€Â°
	}

	for(i = 0; i < n; i++)
		if(a[i] > max) //×€Â½×€Â°×ÿâ€¦×€Â¾×€Â´×€Â¸×€Â¼ ×€Â¿×€Â¾×€Â´ ×€Ã·×€Â°×€Ã·×€Â¸×€Â¼ ×€Â½×€Â¾×€Â¼×€Âµ×ÿâ‚¬×€Â¾×€Â¼ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×€Â° ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Âµ×ÿâ€¡×€Â°×€Âµ×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€¡×€Â°×ÿâ€°×€Âµ ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â³×€Â¾
			max = a[i];

	for(i = 0; i < n; i++)
		if(a[i] == max) // ×€Â²×ÿâ€¹×€Â²×€Â¾×€Â´×€Â¸×€Â¼ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×ÿÆ’ ×€Ã·×€Â¾×ÿâ€ÿ×€Â¾×ÿâ‚¬×€Â°×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â·×€Â°×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â°×€Â½×€Â° ×€Â¿×€Â¾×€Â´ ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â¸×€Â¼ ×€Â½×€Â¾×€Â¼×€Âµ×ÿâ‚¬×€Â¾×€Â¼ 
		{
			cout << "Country tovar kotoroy prihodil samo chasto s 2011 po 2013 year :\n" << c[i] << endl;
			break;
		}

}

void z4(Tov *str, const int n)
{
	cout << "Ukrain has in 2013 year and with value > 2000 takih postachalnikiv :\n";
 	int i;
	for(i = 0; i < n; i++)
		if(!strcmp(str[i].count, "Ukrain") && str[i].year == 2013 && str[i].value > 2000) //×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¸ ×€Â²×ÿâ€¹×€Â¿×€Â¾×€Â»×€Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â¾×€Â´×€Â½×€Â¾×€Â²×ÿâ‚¬×€Âµ×€Â¼×€Âµ×€Â½×€Â½×€Â¾ ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ ×ÿÆ’×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¾×€Â²×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â²×ÿâ€¹×€Â²×€Â¾×€Â´×€Â¸×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×€Â°
			cout << str[i].phyrm << endl;
}

void z3(Tov *str, const int n)
{
	int i, sum = 0;

	for(i = 0; i < n; i++)
		if(str[i].year == 2013 || str[i].year == 2012 || str[i].year == 2011) //×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¸ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬ ×€Â·×€Â° 2011 -2013 ×€Â³×€Â¾×€Â´×€Â° , ×ÿâ€ÿ×€Â¾ ×€Â¿×ÿâ‚¬×€Â¸×€Â±×€Â¾×€Â²×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â¼ ×ÿâ€ ×€Âµ×€Â½×ÿÆ’ ×€Â·×€Â° ×€Âµ×€Â³×€Â¾ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×ÿâ€¹
			sum += (str[i].value * str[i].kolvo);

	cout << "Summa vartosti tovarov za 2011-2013 years :\n" << sum << " ruskih dollarov" << endl;
}

void z2(Tov *str, const int n) //×€Â² ×ÿï¿½×ÿâ€ÿ×€Â¾×€Â¹ ×ÿâ€ÿ×ÿÆ’×€Â½×€Ã·×ÿâ€ ×€Â¸×€Â¸ ×€Â´×€Âµ×€Â»×€Â°×€Âµ×€Â¼ ×ÿâ€ÿ×€Â¾×€Â¶×€Âµ ×ÿï¿½×€Â°×€Â¼×€Â¾×€Âµ ×ÿâ€¡×ÿâ€ÿ×€Â¾ ×€Â¸ ×€Â² ×€Â¿×ÿâ‚¬×€Âµ×€Â´×ÿâ€¹×€Â´×ÿÆ’×ÿâ€°×€Âµ×€Â¹
{								// ×ÿâ€ÿ×€Â¾×€Â»×ÿï¿½×€Ã·×€Â¾ ×€Â¸×ÿâ€°×€Âµ×€Â¼ ×€Â¼×€Â¸×€Â½×€Â¸×€Â¼×ÿÆ’×€Â¼ ×€Â° ×€Â½×€Âµ ×€Â¼×€Â°×€Ã·×ÿï¿½×€Â¸×€Â¼×ÿÆ’×€Â¼
	int i, j, b = 0, min = n, a[1000];
	for(i = 0; i < n; i++)
	{
		for(j = 0; j < i; j++)
			if(str[i].phyrm == str[j].phyrm)
				i++;

		for(j = 0; j < n; j++)
			if(str[i].phyrm == str[j].phyrm)
				b++;

		a[i] = b;
	}
	
	for(i = 0; i < n; i++)
		if(a[i] < min)
			min = a[i];

	for(i = 0; i < n; i++)
		if(a[i] == min)
		{
			cout << "Phirma tovar kotoroy prihodit samo redko :\n" << str[i].phyrm << endl;
			break;
		}
}

void z1(Tov *str, const int n)
{
	int i, j, b = 0, max = 0, a[1000];
	for(i = 0; i < n; i++) //×€Â·×€Â°×€Â¿×ÿÆ’×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â°×€Âµ×€Â¼ ×ÿâ€ ×€Â¸×€Ã·×€Â» 
	{//×€Â½×€Â°×ÿâ€¦×€Â¾×€Â´×€Â¸×€Â¼ ×€Ã·×€Â°×€Ã·×€Â°×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×€Â° ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Âµ×ÿâ€¡×€Â°×€Âµ×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€¡×€Â°×ÿâ€°×€Âµ ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â³×€Â¾
		for(j = 0; j < i; j++)
			if(str[i].phyrm == str[j].phyrm)
				b++;
		a[i] = b; // ×€Â·×€Â°×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€¹×€Â²×€Â°×€Âµ×€Â¼ ×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â¾×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â¾ ×ÿâ‚¬×€Â°×€Â· ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Âµ×ÿâ€¡×€Â°×€Âµ×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×€Ã·×€Â°×€Ã·×€Â°×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×€Â°
	}

	for(i = 0; i < n; i++)
		if(a[i] > max) //×€Â½×€Â°×ÿâ€¦×€Â¾×€Â´×€Â¸×€Â¼ ×€Â¿×€Â¾×€Â´ ×€Ã·×€Â°×€Ã·×€Â¸×€Â¼ ×€Â½×€Â¾×€Â¼×€Âµ×ÿâ‚¬×€Â¾×€Â¼ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×€Â° ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿâ‚¬×€Âµ×ÿâ€¡×€Â°×€Âµ×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€¡×€Â°×ÿâ€°×€Âµ ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â³×€Â¾
			max = a[i];

	for(i = 0; i < n; i++)
		if(a[i] == max) // ×€Â²×ÿâ€¹×€Â²×€Â¾×€Â´×€Â¸×€Â¼ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×ÿÆ’ ×€Ã·×€Â¾×ÿâ€ÿ×€Â¾×ÿâ‚¬×€Â°×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â·×€Â°×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â°×€Â½×€Â° ×€Â¿×€Â¾×€Â´ ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â¸×€Â¼ ×€Â½×€Â¾×€Â¼×€Âµ×ÿâ‚¬×€Â¾×€Â¼ 
		{
			cout << "Phirma tovar kotoroy prihodit samo chasto :\n" << str[i].phyrm << endl;
			break;
		}
}

void gat(Tov *str, const int n)
{
	cout << "For exit - enter exit, for receive a response to a task, enter its number" << endl;
	char s[12]; // ×ÿÂ¿Â½×ÿÂ¿Â½×€Â¾×€Â·×€Â´×€Â°×ÿâ€˜×€Â¼ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â¼×€Â²×€Â¾×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Â½×ÿâ€¹×€Â¹ ×€Â¼×€Â°×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â² ×€Â² ×€Ã·×€Â¾×ÿâ€ÿ×€Â¾×ÿâ‚¬×€Â¹ ×€Â±×ÿÆ’×€Â´×ÿÆ’×ÿâ€ÿ ×€Â·×€Â°×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€¹×€Â²×€Â°×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×€Ã·×€Â¾×€Â¼×€Â°×€Â½×€Â´×ÿâ€¹
	while (true) // ×€Â·×€Â°×€Â¿×ÿÆ’×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â°×€Âµ×€Â¼ ×€Â±×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â¾×€Â½×€Âµ×ÿâ€¡×€Â½×ÿâ€¹×€Â¹ ×ÿâ€ ×€Â¸×€Ã·×€Â» 
	{
		cout << "What do you want? "; // ×€Â¿×ÿâ‚¬×€Â¾×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â¼ ×ÿÆ’ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â·×€Â²×€Âµ×ÿâ‚¬×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â²×€Â²×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â¸ ×€Ã·×€Â¾×€Â¼×€Â¼×€Â°×€Â½×€Â´×ÿÆ’ 
		gets_s(s); //×€Â¿×€Â¾×€Â»×ÿÆ’×ÿâ€¡×€Â°×€Âµ×€Â¼ ×€Âµ×ÿâ€˜

		if (!strcmp(s, "exit")) //×ÿÂ¿Â½×ÿÂ¿Â½×€Â²×€Âµ×ÿâ‚¬×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â¼ ×€Âµ×ÿâ€˜ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â¾ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¾×€Â²×€Â¾×€Â¼ exit,×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¸ ×€Â¾×€Â½×€Â¸ ×ÿâ‚¬×€Â°×€Â²×€Â½×ÿâ€¹, ×ÿâ€ÿ×€Â¾ ×€Â²×ÿâ€¹×ÿâ€¦×€Â¾×€Â´×€Â¸×€Â¼ ×€Â¸×€Â· ×ÿâ€ ×ÿâ€¹×€Ã·×€Â»×€Â°, ×€Â¸ ×€Ã·×€Â°×€Ã· ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Âµ×€Â´×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â²×€Â¸×€Âµ ×€Â¸×€Â· ×ÿâ€ÿ×ÿÆ’×€Â½×€Ã·×ÿâ€ ×€Â¸×€Â¸ 
			return;
		else  if(!strcmp(s, "1.10"))
			z10(str, n);
		else  if(!strcmp(s, "1.9"))
			z9(str, n);
		else  if(!strcmp(s, "1.8"))
			z8(str, n);
		else  if(!strcmp(s, "1.7"))
			z7(str, n);
		else  if(!strcmp(s, "1.6"))
			z6(str, n);
		else  if(!strcmp(s, "1.5"))
			z5(str, n);
		else  if(!strcmp(s, "1.4"))
			z4(str, n);
		else  if(!strcmp(s, "1.3"))
			z3(str, n);
		else  if(!strcmp(s, "1.1"))
			z1(str, n);
		else  if(!strcmp(s, "1.2"))
			z2(str, n);

	}
}
void set_all(Tov *str, int m) // ×ÿâ€ÿ×ÿÆ’×€Â½×ÿâ€ ×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â¿×ÿâ‚¬×€Â¸×€Â½×€Â¸×€Â¼×€Â°×€Âµ×ÿâ€ÿ ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€¹×€Â»×€Ã·×ÿÆ’ ×€Â½×€Â° ×€Â¾×€Â±×€Â»×€Â°×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â¿×€Â°×€Â¼×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â¸ ×€Â² ×€Ã·×€Â¾×ÿâ€ÿ×€Â¾×ÿâ‚¬×€Â¾×€Â¹ ×€Â»×€Âµ×€Â¶×€Â¸×ÿâ€ÿ ×€Â¼×€Â°×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â² (×€Â´×€Â°, ×ÿâ€ÿ×€Â°×€Ã· ×€Â¼×€Â¾×€Â¶×€Â½×€Â¾ ))) ×€Â¸ ×ÿâ€¡×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â¾ ×€Ã·×€Â»×€Â¸×€Âµ×€Â½×ÿâ€ÿ×€Â¾×€Â²
{
	int b;
	srand(time(0)); // ×€Â·×€Â°×€Â¿×ÿÆ’×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â°×€Âµ×€Â¼ ×ÿâ‚¬×€Â°×€Â½×€Â´×€Â¾×€Â¼ 
	for (int i = 0; i < m; i++) // ×€Â·×€Â°×€Â¿×ÿÆ’×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â°×€Âµ×€Â¼ ×ÿâ€ ×€Â¸×€Ã·×€Â» ×€Â² ×€Ã·×€Â¾×ÿâ€ÿ×€Â¾×ÿâ‚¬×€Â¾×€Â¼ ×€Â±×ÿÆ’×€Â´×ÿÆ’×ÿâ€ÿ ×€Â¿×ÿâ‚¬×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â²×€Â¾×€Âµ×€Â½×ÿâ€¹ ×€Â·×€Â½×€Â°×ÿâ€¡×€Âµ×€Â½×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â¼×ÿÆ’ ×ÿË†×€Â¾ ×€Â¿×€Â¾×€Ã·×€Â° ×ÿâ€¡×ÿâ€ÿ×€Â¾ ×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½ (×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ ×€Â¸×€Â¼×€Âµ×€Â½×€Â½×€Â° ×€Â²×ÿâ€¹×€Â´×ÿÆ’×€Â¼×€Â°×€Â½×ÿâ€¹ , ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ ×ÿâ€¡×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×€Â° ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×ÿÆ’×ÿâ€¡×€Â°×€Â¹×€Â½×ÿâ€¹, ×€Â²×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â¾×€Â²×€Â¿×€Â°×€Â´×€Âµ×€Â½×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ‚¬×€Âµ×€Â°×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Â½×€Â¾×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â»×ÿÆ’×ÿâ€¡×€Â°×€Â½×ÿâ€¹×€Âµ)
	{
		b = rand() % 10;
		strcpy(str[i].phyrm, firm[b]); // ×€Â·×€Â°×€Â½×€Â¾×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â¼ ×€Â¿×€Âµ×ÿâ‚¬×€Â²×ÿÆ’×ÿÂ¿Â½×ÿÂ¿Â½ ×ÿâ€ÿ×€Â¸×ÿâ‚¬×€Â¼×ÿÆ’ ×€Â¸×€Â· ×€Â½×€Â°×ÿË†×€Âµ×€Â³×€Â¾ ×ÿÂ¿Â½×ÿÂ¿Â½×€Â¿×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½×€Ã·×€Â° ×€Â² ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×€Â´×€Â° 
		strcpy(str[i].name, vestovar[b]); //×€Â¿×€Âµ×ÿâ‚¬×€Â²×€Â¾×€Âµ ×€Â½×€Â°×€Â·×€Â²×€Â°×€Â½×€Â¸×€Âµ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×€Â°
		strcpy(str[i].count, country[b]);
		str[i].value = 1 + rand() % 4000; //×ÿâ€ ×€Âµ×€Â½×€Â° ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×€Â° ×€Â¾×ÿâ€ÿ 1 ×€Â´×€Â¾ 4000 ×€Â²×€Ã·×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€¡×€Â¸×ÿâ€ÿ×€Âµ×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Â½×€Â¾
		str[i].kolvo = 1 + rand() % 20; // ×€Ã·×€Â¾×€Â»×€Â²×€Â¾ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×€Â° ×€Â¾×ÿâ€ÿ 1 ×€Â´×€Â¾ 20 ×€Â²×€Ã·×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€¡×€Â¸×ÿâ€ÿ×€Âµ×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Â½×€Â¾
		str[i].year = 2010 + rand() % 6; // ×€Â³×€Â¾×€Â´ ×€Â¾×ÿâ€ÿ 2010 ×€Â´×€Â¾ 2015 ×€Â²×€Ã·×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€¡×€Â¸×ÿâ€ÿ×€Âµ×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Â½×€Â¾
		str[i].month = 1 + rand() % 12; // ×ÿâ‚¬×€Â°×€Â½×€Â´×€Â¾×€Â¼×€Â½×ÿâ€¹×€Âµ ×€Â¼×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ ×€Â° ×€Â¾×ÿâ€ÿ 1 ×€Â´×€Â¾ 12 ×€Ã·×€Â»×€Â±×ÿâ€¡×€Â¸×ÿâ€ÿ×€Âµ×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Â½×€Â¾
		str[i].day = 1 + rand() % 28; // ×ÿâ‚¬×€Â°×€Â½×€Â´×€Â¾×€Â¼×€Â½×ÿâ€¹×€Âµ ×€Â´×€Â½×€Â¸ ×€Â¾×ÿâ€ÿ 1 ×€Â´×€Â¾ 28 , ×€Â¿×€Â¾×ÿâ€ÿ×€Â¾×€Â¼×ÿÆ’ ×ÿâ€¡×ÿâ€ÿ×€Â¾ ×€Â² ×ÿâ‚¬×€Â¾×ÿâ€ÿ ×ÿÂ¿Â½×ÿÂ¿Â½ ×€Âµ×€Â±×€Â°×€Â» ×€Â½×€Â°×€Â¿×ÿâ‚¬×ÿÂ¿Â½×ÿÂ¿Â½×€Â³×€Â°×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½
	}
}

void main2()
{
	const int n = 1000; // ×€Ã·×€Â¾×€Â»×€Â¸×ÿâ€¡×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â²×€Â¾ ×€Ã·×€Â»×€Â¸×€Âµ×€Â½×ÿâ€ÿ×€Â¾×€Â²
	Tov tovar[n]; // ×€Ã·×€Â°×€Ã·×€Â¾×€Â¹ ×ÿâ€ÿ×€Â¾ ×€Â¼×€Â°×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â² , ×€Â·×€Â°×€Â±×ÿâ€¹×€Â» ×€Ã·×€Â°×€Ã· ×€Â½×€Â°×€Â·×ÿâ€¹×€Â²×€Â°×€Âµ×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â° ×€Â³×ÿÆ’×€Â³×€Â»×€Â¸×ÿâ€ÿ×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â»×€Âµ×€Â½×ÿÂ¿Â½×ÿÂ¿Â½ 
    set_all(tovar, n); // ×€Â¾×ÿâ€ÿ×€Â¿×ÿâ‚¬×€Â°×€Â²×€Â»×ÿÂ¿Â½×ÿÂ¿Â½×€Âµ×€Â¼ ×€Â¼×€Â°×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×ÿÂ¿Â½×€Â¸×€Â² ×€Â² ×ÿâ€ÿ×ÿÆ’×€Â½×€Ã·×ÿâ€ ×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â¸ ×€Ã·×€Â¾×€Â»×€Â¸×ÿâ€¡×€Âµ×ÿÂ¿Â½×ÿÂ¿Â½×ÿâ€ÿ×€Â²×€Â¾ ×ÿâ€ÿ×€Â¾×€Â²×€Â°×ÿâ‚¬×€Â° , ×€Â´×€Â»×ÿÂ¿Â½×ÿÂ¿Â½ ×€Â·×€Â°×€Â¿×€Â¾×€Â»×€Â½×€Âµ×€Â½×€Â¸×ÿÂ¿Â½×ÿÂ¿Â½

	cout << setw(15) << "Product name" << setw(15) << "Company name" << setw(20) << "Coumtry" << setw(20) << "Price" << setw(20) << "Amount" << setw(10) << "Data";
	for(int i = 0; i < n; i++) {

		
		cout << setw(15) << tovar[i].name << setw(15) << tovar[i].phyrm << setw(20) << tovar[i].count << setw(20) << tovar[i].value << setw(20) << tovar[i].kolvo << setw(10) << tovar[i].day << "." << tovar[i].month << "." << tovar[i].year << endl;
	}
	gat(tovar, n);
}